@import 'variables/colors.scss';
@import 'variables/sizes.scss';

:root {
  --off-canvas-width: #{$off-canvas-width};
}

html, body, .off-canvas-wrapper  {
  width: 100%;
  height: 100%;
}

@mixin off-canvas($is-floating) {
  height: 100%;
  min-height: 100%;
  display: flex;
  align-items: stretch;
  box-sizing: border-box;
  .off-canvas-nav {
    width: var(--off-canvas-width);
    height: 100%;
    min-height: 100%;
    padding: $off-canvas-padding-size;
    flex-grow: 0;
    flex-shrink: 0;
    overflow-y: auto;
    box-sizing: border-box;
    @if $is-floating {
      box-shadow: $off-canvas-box-shadow-float;
    } @else {
      box-shadow: $off-canvas-box-shadow;
    }
  }
}

.off-canvas-wrapper {
  overflow-x: hidden;
  .off-canvas {
    @include off-canvas(false);
    width: calc(100% + var(--off-canvas-width));
    margin-left: calc(var(--off-canvas-width) * -1);
    transition: margin-left $off-canvas-transition-time $off-canvas-transition-style;
    &.active {
      margin-left: 0;
    }
    .off-canvas-content {
      overflow: auto;
      position: relative;
      flex-grow: 1;
      &:not(.off-canvas-no-close).overlay::after {
        background-color: rgba($off-canvas-overlay-color, 0);
        transition: background-color $off-canvas-transition-time $off-canvas-transition-style, width 0s $off-canvas-transition-time, height 0s $off-canvas-transition-time;
      }
      &:not(.off-canvas-no-close).overlay.active::after {
        background-color: rgba($off-canvas-overlay-color, $off-canvas-overlay-opacity);
        transition: background-color $off-canvas-transition-time $off-canvas-transition-style;
      }
      &:not(.off-canvas-no-close)::after {
        content: '';
        width: 0;
        height: 0;
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        z-index: 10000;
      }
      &.active:not(.off-canvas-no-close)::after {
        background-color: transparent;
        width: 100%;
        height: 100%;
      }
    }
  }
}

.off-canvas-floating {
  @include off-canvas(true);
  width: var(--off-canvas-width);
  height: 100vh;
  position: fixed;
  top: 0;
  left: calc(var(--off-canvas-width) * -1);
  transition: left $off-canvas-transition-time $off-canvas-transition-style;
  z-index: 1;
  &.active {
    left: 0;
  }
}
